<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myClass">

	<!-- 재료관련쿼리 -->
	
	<select id="insertIng" parameterType="com.hotbody.myclass.Ing">
		insert into ingredients(ingrerdientsNum,nutrient,ingredientsName,ingredientsUnit,
								calory,image,content,unit) values
								(ing_seq.nextval,#{nutrient}, #{ingredientsName}, #{ingredientsUnit},
								#{calory},#{image, jdbcType=VARCHAR},#{content},#{unit})
	</select>
	
	<!-- 검색조건.. -->
	<sql id="where-list">
	  <if test="searchKey=='ingredientsName'">
	      INSTR(ingredientsName, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='nutrient'">
	       INSTR(nutrient, #{searchValue}) &gt; 0
	  </if>
	</sql>
	
	<!-- 데이터갯수 -->
	<select id="dataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM ingredients
		<where>
			<if test="searchValue != null and searchValue !=''">  
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<!-- 리스트보여주기 -->
	<select id="listIng" resultType="com.hotbody.myclass.Ing" parameterType="map">
	 	SELECT * FROM (
	 		SELECT ROWNUM rnum, tb.* FROM (
				SELECT ingrerdientsNum, nutrient, ingredientsName, ingredientsUnit, calory,image,
					   content,unit
				FROM ingredients 
				<where>
					<if test="searchValue != null and searchValue !=''">
						<include refid="where-list"/>
					</if>
				</where>
				ORDER BY ingrerdientsNum DESC 
	 			) tb WHERE ROWNUM  &lt;= #{end}
	 	) WHERE rnum  &gt;= #{start}
	</select>
	
	<!-- 글보기 -->
	<select id="readIng" resultType="com.hotbody.myclass.Ing" parameterType="Integer">
		SELECT ingrerdientsNum, nutrient, ingredientsName, ingredientsUnit, calory, image,
			   content,unit
		FROM ingredients 
		WHERE ingrerdientsNum = #{ingrerdientsNum}
	</select>
	
	<!-- 이전글 -->
	<select id="preReadIng" resultType="com.hotbody.myclass.Ing" parameterType="map">
		SELECT tb.* FROM (
			SELECT ingrerdientsNum, image
			      FROM ingredients
                  <where>
                       <if test="searchValue != null and searchValue != '' ">
			                 <include refid="where-list"/>
		                </if>
		           <![CDATA[
		                AND (ingrerdientsNum > #{ingrerdientsNum})
		             ]]>
	              </where>
				ORDER BY ingrerdientsNum ASC
			) tb WHERE ROWNUM=1
	</select>

	<!-- 다음글 -->
	<select id="nextReadIng" resultType="com.hotbody.myclass.Ing" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT ingrerdientsNum, image
			       FROM ingredients     
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list"/>
		                 </if>
		               <![CDATA[
		                 AND (ingrerdientsNum < #{ingrerdientsNum})
		                 ]]>
	                </where>
				ORDER BY ingrerdientsNum DESC
			) tb WHERE ROWNUM=1
	</select>


     <!-- 수정 -->
     <update id="updateIng" parameterType="com.hotbody.myclass.Ing">
         UPDATE ingredients SET nutrient=#{nutrient}, ingredientsName=#{ingredientsName},
                     ingredientsUnit=#{ingredientsUnit}, content=#{content}, unit=#{unit},
                     calory=#{calory}, image=#{image, jdbcType=VARCHAR}
                    WHERE ingrerdientsNum = #{ingrerdientsNum}
      </update>

     
      <!-- 삭제 -->
      <delete id="deleteIng" parameterType="Integer">
            DELETE FROM ingredients WHERE ingrerdientsNum = #{ingrerdientsNum}
      </delete>
	
	
	
<!-- 운동관련쿼리 -->
	<select id="insertExercise" parameterType="com.hotbody.myclass.Exercise">
		insert into exerciseInfo(exerciseNum, exerciseType, exerciseName, unitTime,
								lossCal, video, pic, unit) 
								values(exercise_seq.nextval, #{exerciseType}, #{exerciseName}, #{unitTime},
								#{lossCal}, #{video, jdbcType=VARCHAR}, #{pic}, #{unit})
	</select>
	
	<!-- 운동분류가져오기 -->
	<select id="exerciseType" resultType="com.hotbody.myclass.ExerciseType">
		select exerciseType, typeName
		from execiseType
	</select>

	
	<sql id="where-list2">
	  <if test="searchKey=='exerciseName'">
	      INSTR(exerciseName, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='typeName'">
	       INSTR(typeName, #{searchValue}) &gt; 0
	  </if>
	</sql>
	
	
	<!-- 운동정보의 데이터갯수 -->
	<select id="dataCount2" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0)
		FROM exerciseInfo i
		join execiseType t on i.exerciseType = t.exerciseType
		<where>
			<if test="searchValue != null and searchValue !=''">  
				<include refid="where-list2"/>
			</if>
		</where>
	</select>
	
	
	<select id="listExercise" resultType="com.hotbody.myclass.Exercise" parameterType="map">
	 	SELECT * FROM (
	 		SELECT ROWNUM rnum, tb.* FROM (
				SELECT exerciseNum, i.exerciseType, typeName, exerciseName, unitTime, unit,lossCal,
					   video,pic
				FROM exerciseInfo i
                join execiseType t on i.exerciseType = t.exerciseType
				<where>
					<if test="searchValue != null and searchValue !=''">
						<include refid="where-list2"/>
					</if>
				</where>
				ORDER BY exerciseNum DESC 
	 			) tb WHERE ROWNUM  &lt;= #{end}
	 	) WHERE rnum  &gt;= #{start}
	</select>
	
	
	<select id="readExercise" resultType="com.hotbody.myclass.Exercise" parameterType="Integer">
		SELECT exerciseNum, i.exerciseType, exerciseName, unitTime, unit, lossCal, typeName,
			   video,pic
		FROM exerciseInfo i
        join execiseType t on i.exerciseType = t.exerciseType
        
		WHERE exerciseNum = #{exerciseNum}
	</select>
	
	
	<select id="preReadExercise" resultType="com.hotbody.myclass.Exercise" parameterType="map">
		SELECT tb.* FROM (
			SELECT exerciseNum, exerciseName
			      FROM exerciseInfo i
				  join execiseType t on i.exerciseType = t.exerciseType
                  <where>
                       <if test="searchValue != null and searchValue != '' ">
			                 <include refid="where-list2"/>
		                </if>
		           <![CDATA[
		                AND (exerciseNum > #{exerciseNum})
		             ]]>
	              </where>
				ORDER BY exerciseNum ASC
			) tb WHERE ROWNUM=1
	</select>

	
	<select id="nextReadExercise" resultType="com.hotbody.myclass.Exercise" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT exerciseNum, exerciseName
			      FROM exerciseInfo i
				  join execiseType t on i.exerciseType = t.exerciseType    
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list2"/>
		                 </if>
		               <![CDATA[
		                 AND (exerciseNum < #{exerciseNum})
		                 ]]>
	                </where>
				ORDER BY exerciseNum DESC
			) tb WHERE ROWNUM=1
	</select>


     
     <update id="updateExercise" parameterType="com.hotbody.myclass.Exercise">
         UPDATE exerciseInfo SET exerciseType=#{exerciseType}, exerciseName=#{exerciseName},
                     unitTime=#{unitTime}, unit=#{unit}, lossCal=#{lossCal},
                     video=#{video}, pic=#{pic, jdbcType=VARCHAR}
                    WHERE exerciseNum = #{exerciseNum}
      </update>

     
      
      <delete id="deleteExercise" parameterType="Integer">
            DELETE FROM exerciseInfo WHERE exerciseNum = #{exerciseNum}
      </delete>
      
    
<!-- 유용한정보관련 쿼리 -->
	<insert id="insertInfo" parameterType="com.hotbody.myclass.Information">
		insert into informationd(infoNum, subject, content) 
					     values (information_seq.nextval, #{subject}, #{content})
	</insert>
	
	<!-- 유용한정보 검색조건.. -->
	<sql id="where-list3">
	  <if test="searchKey=='subject'">
	      INSTR(subject, #{searchValue}) &gt; 0
	  </if>
	</sql>
	
	<!-- 데이터갯수 -->
	<select id="dataCount3" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM informationd
		<where>
			<if test="searchValue != null and searchValue !=''">  
				<include refid="where-list3"/>
			</if>
		</where>
	</select>
	
	<!-- 리스트보여주기 -->
	<select id="listInfo" resultType="com.hotbody.myclass.Information" parameterType="map">
	 	SELECT * FROM (
	 		SELECT ROWNUM rnum, tb.* FROM (
				SELECT infoNum, subject, content
				FROM informationd 
				<where>
					<if test="searchValue != null and searchValue !=''">
						<include refid="where-list3"/>
					</if>
				</where>
				ORDER BY infoNum DESC 
	 			) tb WHERE ROWNUM  &lt;= #{end}
	 	) WHERE rnum  &gt;= #{start}
	</select>
	
	<!-- 글보기 -->
	<select id="readInfo" resultType="com.hotbody.myclass.Information" parameterType="Integer">
		SELECT infoNum, subject, content
		FROM informationd 
		WHERE infoNum = #{infoNum}
	</select>
	
	<!-- 이전글 -->
	<select id="preReadInfo" resultType="com.hotbody.myclass.Information" parameterType="map">
		SELECT tb.* FROM (
			SELECT infoNum, subject
			      FROM informationd
                  <where>
                       <if test="searchValue != null and searchValue != '' ">
			                 <include refid="where-list3"/>
		                </if>
		           <![CDATA[
		                AND (infoNum > #{infoNum})
		             ]]>
	              </where>
				ORDER BY infoNum ASC
			) tb WHERE ROWNUM=1
	</select>

	<!-- 다음글 -->
	<select id="nextReadInfo" resultType="com.hotbody.myclass.Information" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT infoNum, subject
			       FROM informationd     
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list3"/>
		                 </if>
		               <![CDATA[
		                 AND (infoNum < #{infoNum})
		                 ]]>
	                </where>
				ORDER BY infoNum DESC
			) tb WHERE ROWNUM=1
	</select>


     <!-- 수정 -->
     <update id="updateInfo" parameterType="com.hotbody.myclass.Information">
         UPDATE informationd SET subject=#{subject}, content=#{content}
         WHERE infoNum = #{infoNum}
      </update>

     
      <!-- 삭제 -->
      <delete id="deleteInfo" parameterType="Integer">
            DELETE FROM informationd 
            WHERE infoNum = #{infoNum}
      </delete>
	
<!-- 오늘의운동관련 쿼리 -->
	<insert id="insertToday" parameterType="com.hotbody.myclass.TodayExer">
	INSERT INTO todayexer(edate,exerciseNum,infoNum,userid)
          VALUES (to_char(sysdate,'yyyy-mm-dd'), 
                 (SELECT exerciseNum FROM (SELECT ROWNUM RN, exerciseNum FROM (SELECT exerciseNum FROM exerciseInfo ORDER BY DBMS_RANDOM.random())) WHERE RN = 1),
                 (SELECT infoNum FROM (SELECT ROWNUM RN, infoNum FROM (SELECT infoNum FROM informationd ORDER BY DBMS_RANDOM.random())) WHERE RN = 1),
                  #{userId})
	</insert>
	
	<!-- 아이디,날짜에 맞는 데이터 있는 갯수가져오기 -->
	<select id = "countToday" parameterType="map" resultType="Integer">
		select nvl(count(*),0)
		from todayexer
		where edate = #{date}
		and   userid = #{userId}
	</select>
	
	<!-- 클래스등록이 되어있는 유저 갯수가져오기 -->
	<select id="countUser" parameterType="map" resultType="Integer">
		select nvl(count(*),0)
		from register
		where userid= #{userId}
	</select>
	
	<sql id="where-list4">
	  <if test="searchKey=='edate'">
	       INSTR(edate, #{searchValue}) &gt; 0
	  </if>
	</sql>
	
	<!-- 데이터갯수 -->
	<select id="dataCount4" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*),0) FROM todayexer
		<where>
			<if test="searchValue != null and searchValue !=''">  
				<include refid="where-list4"/>
			</if>
		</where>
	</select>
	
	<!-- 오늘운동리스트 -->
	<select id="listToday" parameterType="map"
	            resultType="com.hotbody.myclass.TodayExer">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT t.exerciseNum, t.infoNum, edate, userId, subject, exerciseName
			     FROM todayexer t 
			     JOIN informationd i on t.infoNum = i.infoNum
			     JOIN exerciseInfo e on t.exerciseNum = e.exerciseNum
			     where userid = #{userId}
                    <where>
                         <if test="searchValue != null and searchValue != ''">
			                  <include refid="where-list4"/>
		                 </if>
	                </where>
	             ORDER BY edate DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>
	
<!-- /////////////////////////////////다이어트관련////////////////////////////////////////////////////// -->	
<!-- 다이어트일기 -->
	<select id="diarySeq" resultType="Integer">
		select diary_seq.nextval from dual
	</select>
	
	<!-- 다이어트일기 추가 -->
	<insert id="insertDietDiary" parameterType="com.hotbody.myclass.Diary">
		insert into dietdiary(diaryNum,weight,dietdate,feedback,userid,subject,content) 
					  values(#{diaryNum},#{weight},#{dietDate},#{feedback},#{userId},#{subject},#{content})
	</insert>
	
	<!-- 식단일기 추가 -->
	<insert id="insertDiet" parameterType="com.hotbody.myclass.Diary">
		insert into diet(diaryNum,bldCode) 
					  values(#{diaryNum},#{bldCode})
	</insert>
	
	<!-- 식단상세 추가 -->
	<insert id="insertDietDetails" parameterType="com.hotbody.myclass.Diary">
		insert into dietdetails(dietNumD,ingrerdientsNum,totalUnit,diaryNum,bldCode) 
					  values(dietd_seq.nextval,#{ingrerdientsNum},#{totalUnit},#{diaryNum},#{bldCode})
	</insert>

	<!-- 미션성공여부 추가 -->
	<insert id="insertMisCheck" parameterType="com.hotbody.myclass.Diary">
		insert into mischeck(missionNum,chSuccess,diaryNum) 
					  values(#{missionNum},#{chSuccess},#{diaryNum})
	</insert>

	<!-- 운동일기 추가 -->
	<insert id="insertDiaryExe" parameterType="com.hotbody.myclass.Diary">
		insert into exercise(exerciseNum,exerciseTime,diaryNum) 
					  values(#{exerciseNum},#{exerciseTime},#{diaryNum})
	</insert>
	
	<!-- 미션정보 가져오기 -->
	<select id="missionInfo" parameterType="map" resultType="com.hotbody.myclass.Diary">
		select r.classnum,missionnum,missioncontent,missday,userid,startdate
		from register r join miscontent m on r.classnum = m.classnum
		where userid=#{userId}
		and (to_date(#{start}) - to_date(to_char(startDate,'yyyy-mm-dd'))+1) = missday
	</select>
	
	
<!-- ////////////////////////////다이어트 수정/////////////////////////////////// -->
<!-- 	<update id="updateDietDiary" parameterType="com.hotbody.myclass.Diary">
		update dietdiary set dietdate=#{dietdate}, weight=#{weight}, 
						     subject=#{subject}, content=#{content}
	</update>
	
	<update id="updateDietDiary" parameterType="com.hotbody.myclass.Diary">
		update dietdiary set dietdate=#{dietdate}, weight=#{weight}, 
						     subject=#{subject}, content=#{content}
	</update>
	
	<update id="updateDietDiary" parameterType="com.hotbody.myclass.Diary">
		update dietdiary set dietdate=#{dietdate}, weight=#{weight}, 
						     subject=#{subject}, content=#{content}
	</update>
		
	<update id="updateDietDiary" parameterType="com.hotbody.myclass.Diary">
		update dietdiary set dietdate=#{dietdate}, weight=#{weight}, 
						     subject=#{subject}, content=#{content}
	</update>
	
	<update id="updateDietDiary" parameterType="com.hotbody.myclass.Diary">
		update dietdiary set dietdate=#{dietdate}, weight=#{weight}, 
						     subject=#{subject}, content=#{content}
	</update>	 -->
<!-- ////////////////////////////다이어트 읽기/////////////////////////////////// -->

<!-- ////////////////////////////다이어트 리스트/////////////////////////////////// -->
	
<!-- ////////////////////////////다이어트 삭제/////////////////////////////////// -->	
	<!-- 다이어트일기 삭제 -->
	<delete id ="deleteDietDiary" parameterType="Integer">
		delete from dietdiary where diaryNum = #{diaryNum}
	</delete>
	
	<!-- 식단일기 삭제 -->
	<delete id ="deleteDiet" parameterType="Integer">
		delete from diet where diaryNum = #{diaryNum}
	</delete>
	
	<!-- 식단일기상세 삭제 -->
	<delete id ="deleteDietDetails" parameterType="Integer">
		delete from dietdetails where diaryNum = #{diaryNum}
	</delete>
	
	<!-- 미션성공여부 삭제 -->
	<delete id ="deleteMisCheck" parameterType="Integer">
		delete from mischeck where diaryNum = #{diaryNum}
	</delete>
	
	<!-- 운동일기 삭제 -->
	<delete id ="deleteDiaryExe" parameterType="Integer">
		delete from exercise where diaryNum = #{diaryNum}
	</delete>
	
</mapper>