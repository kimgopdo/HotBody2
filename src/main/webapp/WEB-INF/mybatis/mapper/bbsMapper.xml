<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bbs">
	<insert id="insertBoard" parameterType="com.sp.bbs.Board">
	  INSERT INTO bbs(num, userId, subject, content,
	          saveFilename, originalFilename) VALUES
	         (bbs_seq.NEXTVAL, #{userId}, #{subject}, #{content},
	           #{saveFilename, jdbcType=VARCHAR}, 
	           #{originalFilename, jdbcType=VARCHAR}
	         )
	</insert>

	<!-- sql 태그 -->
	<!--
       *  INSTR() 대신 LIKE 를 사용하는 경우
          subject LIKE '%' || #{searchValue} || '%'
          INSTR(content, #{searchValue}) &gt; 0
       * CLOB인 경우 검색(CLOB는 LIKE를 사용하면 성능 저하)
          DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	-->
	<sql id="where-list">
	  <if test="searchKey=='userName'">
	      userName=#{searchValue}
	  </if>
	  <if test="searchKey=='subject'">
	       INSTR(subject, #{searchValue}) &gt; 0
	  </if>
	  <if test="searchKey=='content'">
	      DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0 
	  </if>
	  <if test="searchKey=='created'">
	      TO_CHAR(b.created, 'YYYY-MM-DD') = #{searchValue}
          OR TO_CHAR(b.created, 'YYYYMMDD') = #{searchValue}
	  </if>
	</sql>

	<!-- 글개수 -->
	<select id="dataCount" parameterType="map"
	            resultType="Integer">
	  SELECT NVL(COUNT(*), 0) FROM bbs b
	        JOIN member1 m
	        ON b.userId=m.userId
	     <where>
	     	<if test="searchValue!=null and searchValue!='' ">
	     	    <include refid="where-list"/>
	     	</if>
	     </where>   
	</select>

	<!-- 글리스트 -->
	<select id="listBoard" parameterType="map"
	            resultType="com.sp.bbs.Board">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
			     SELECT num, b.userId, userName, subject
			           ,TO_CHAR(b.created, 'YYYY-MM-DD') created
					   ,hitCount, saveFilename
			        FROM bbs b JOIN member1 m ON b.userId=m.userId
                    <where>
                         <if test="searchValue != null and searchValue != ''">
			                  <include refid="where-list"/>
		                 </if>
	                </where>
	                ORDER BY num DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>

	<!-- 글보기 -->
	<select id="readBoard" resultType="com.sp.bbs.Board" parameterType="Integer">
		SELECT num, b.userId, userName, subject, content
				   ,hitCount, b.created,  saveFilename, originalFilename
		FROM bbs b JOIN member1 m ON b.userId=m.userId
		WHERE num = #{num}
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE bbs SET hitCount=hitCount+1 WHERE num = #{num}
	</update>
	
	<!-- AND 가 필요 없는 경우 자동으로 제거 됨 -->
	<!-- 이전글 -->
	<select id="preReadBoard" resultType="com.sp.bbs.Board" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT num, subject
			      FROM bbs b
			      JOIN member1 m ON b.userId=m.userId
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list"/>
		                 </if>
		               <![CDATA[
		                 AND (num > #{num})
		                 ]]>
	                </where>
				ORDER BY num ASC
			) tb WHERE ROWNUM=1
	</select>

	<!-- 다음글 -->
	<select id="nextReadBoard" resultType="com.sp.bbs.Board" 
				parameterType="map">
		SELECT tb.* FROM (
			SELECT num, subject
			       FROM bbs b
			       JOIN member1 m ON b.userId=m.userId
                    <where>
                         <if test="searchValue != null and searchValue != '' ">
			                  <include refid="where-list"/>
		                 </if>
		               <![CDATA[
		                 AND (num < #{num})
		                 ]]>
	                </where>
				ORDER BY num DESC
			) tb WHERE ROWNUM=1
	</select>

     <!-- 수정 -->
     <update id="updateBoard" parameterType="com.sp.bbs.Board">
         UPDATE bbs SET subject=#{subject}, content=#{content}
                    ,saveFilename=#{saveFilename, jdbcType=VARCHAR}
                    ,originalFilename=#{originalFilename, jdbcType=VARCHAR}
                    WHERE num = #{num}
      </update>
      
      <!-- 삭제 -->
      <delete id="deleteBoard" parameterType="Integer">
            DELETE FROM bbs WHERE num = #{num}
      </delete>

	  <insert id="insertReply" parameterType="com.sp.bbs.Reply" >  	
	   INSERT INTO bbsreply (replyNum,num,userId,content,answer)
	   VALUES(bbsreply_seq.NEXTVAL,#{num},#{userId},#{content},#{answer})
	  </insert>
</mapper>