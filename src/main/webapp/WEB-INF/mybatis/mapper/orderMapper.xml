<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order">
	<!-- 시퀀스 구하기 -->
	<select id="seq" resultType="Integer">
		SELECT orders_seq.NEXTVAL FROM dual
	</select>
	
	<!-- 주문했을시, 주문 기본테이블에 insert -->
	<insert id="insertOrder" parameterType="com.hotbody.order.Order">
		INSERT INTO orders(delOrder, cartDate, totalPay, userId, milelagePay)
		VALUES(#{delOrder}, SYSDATE, #{totalPay}, #{userId}, #{milelagePay, jdbcType=INTEGER})
	</insert>
	
	<!-- 주문했을시, 주문 상세테이블에 insert -->
	<insert id="insertCartList" parameterType="com.hotbody.order.Order">
		INSERT INTO cartList(cartOrder, delOrder, classNum, amount, pdNum)
		VALUES(cartlist_seq.NEXTVAL, #{delOrder}, #{classNum, jdbcType=INTEGER}, #{amount}, #{pdNum, jdbcType=INTEGER})
	</insert>
	
	<!-- 총 주문리스트에 insert -->
	<insert id="insertTotalOrderList" parameterType="Integer">
		INSERT INTO totalOrdList(delOrder, payDate)
		VALUES(#{delOrder}, SYSDATE)
	</insert>
	
	<!-- 결제완료 후, 마일리지테이블에 insert -->
	<insert id="insertMilelage" parameterType="com.hotbody.order.Order">
		INSERT INTO milelage(delOrder, userId, milelage)
		VALUES(#{delOrder}, #{userId}, #{milelage})
	</insert>
	
	<!-- 등록회원 테이블에 insert -->
	<insert id="register" parameterType="com.hotbody.order.Order">
		INSERT INTO register(classNum, userId, startDate)
		VALUES(#{classNum}, #{userId}, SYSDATE)
	</insert>
	
	<!-- 주문횟수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM orders o left outer join totalordlist tl
        on o.delorder = tl.delorder 
        where
		userId =#{userId} and
		<if test="lastday != null and lastday != ''">
				 tl.PAYDATE >=#{lastday}
		</if>
	</select>

	<!-- 주문 총리스트 -->
	<select id="listOrder" parameterType="map" resultType="com.hotbody.order.Order">
	SELECT * FROM (
		SELECT ROWNUM rnum, tb.* FROM (
      select o.delorder,o.TOTALPAY,ds.DELSTATE,to_char(tl.PAYDATE,'yyyy-dd-mm') PAYDATE
      ,ctl.AMOUNT,pl.PDBOARDNAME,pm.imgsavefilename,pl.pdNum
        from orders o left outer join delstate ds
        on o.delorder = ds.delorder
        left outer join totalordlist tl
        on o.delorder = tl.delorder
        left outer join cartlist ctl
        on o.delorder = ctl.delorder
        left outer join productlist pl
        on ctl.pdnum = pl.pdnum
        left outer join pmainimg pm  
        on pm.pdnum = pl.pdnum
        where o.userid=#{userId} and

			<if test="lastday != null and lastday != ''">
			<![CDATA[
				 tl.PAYDATE >=#{lastday}
				]]>
			</if>
			
		ORDER BY tl.PAYDATE DESC
	<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
	]]>
	</select>

</mapper>