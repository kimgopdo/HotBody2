<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<insert id="insertReview" parameterType="com.hotbody.hotShop.review.Review">
		INSERT INTO shReviews (reviewCode, userName, reviewContent, starScore, reviewCreated, reviewSubject, pdNum, userId)
					 VALUES (preview_seq.NEXTVAL, #{userName}, #{reviewContent}, #{starScore}, sysdate, #{reviewSubject}, #{pdNum}, #{userId})
	</insert>
	
	<!-- 검색 키 -->
	<sql id="where-list">
		<if test="searchKey == 'userName' ">
			userName = #{searchValue}
		</if>
		<if test="searchKey == 'reviewSubject' ">
			INSTR(reviewSubject, #{searchValue}) &gt; 0
		</if>
		<if test="searchKey == 'reviewContent' ">
			INSTR(reviewContent, #{searchValue}) &gt; 0
		</if>
		<if test="searchKey == 'reviewCreated' ">
			TO_CHAR(reviewCreated, 'YYYY-MM-DD') = #{searchValue} OR TO_CHAR(reviewCreated, 'YYYYMMDD') = #{searchValue}
		</if>
	</sql>
	
	<select id="dataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*), 0) FROM shReviews r LEFT OUTER JOIN productList p ON r.pdNum=p.pdNum
		<where>
			<if test="searchValue != null and searchValue != ''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<!-- 상품 아티클에서 게시물 개수 -->
	<select id="dataCountArticle" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*), 0) FROM shreviews
		<where>
			<if test="searchValue != null and searchValue != ''">
				<include refid="where-list"/>
			</if>
			<if test="pdnum != '1'">
				and pdnum=#{pdnum}
			</if>
		</where>
	</select>
	
	<!-- 리스트 start - end 내림차순 정렬 -->
	<select id="listReview" resultType="com.hotbody.hotShop.review.Review" parameterType="map">
		SELECT * FROM(
    		SELECT ROWNUM rnum, tb.* FROM(
        		SELECT r.reviewCode, r.userName, r.reviewSubject, r.reviewCreated, r.starsCore, p.pdName, r.pdNum, NVL(replyCount, 0) replyCount
        		FROM shreviews r
        		LEFT OUTER JOIN productList p ON r.pdNum=p.pdNum
        		LEFT OUTER JOIN(
					    SELECT reviewCode, COUNT(*) replyCount 
					    FROM recomment GROUP BY reviewCode
					)c ON r.reviewCode = c.reviewCode
        		<where>
					<if test="searchValue != null and searchValue != ''">
						<include refid="where-list"/>
					</if>
				</where>
        		ORDER BY r.reviewCode DESC
     	<![CDATA[
    		) tb WHERE ROWNUM <= #{end}      
		) WHERE rnum >= #{start}
		]]>
	</select>
	
	<!-- 상품 아티클에서 리스트 -->
	<select id="listReviewArticle" resultType="com.hotbody.hotShop.review.Review" parameterType="map">
		SELECT * FROM(
    		SELECT ROWNUM rnum, tb.* FROM(
        		SELECT r.reviewCode, r.userName, r.reviewSubject, r.reviewCreated, r.starsCore, p.pdName, r.pdNum, NVL(replyCount, 0) replyCount
        		FROM shreviews r
        		LEFT OUTER JOIN productList p ON r.pdNum=p.pdNum
		        LEFT OUTER JOIN(
					    SELECT reviewCode, COUNT(*) replyCount 
					    FROM recomment GROUP BY reviewCode
					)c ON r.reviewCode = c.reviewCode
        		<where>
					<if test="searchValue != null and searchValue != ''">
						<include refid="where-list"/>
					</if>
					<if test="pdnum != '1'">
						and r.pdnum=#{pdnum}
					</if>
				</where>
        		ORDER BY r.reviewCode DESC
     	<![CDATA[
    		) tb WHERE ROWNUM <= #{end}      
		) WHERE rnum >= #{start}
		]]>
	</select>
	
	<select id="readReview" resultType="com.hotbody.hotShop.review.Review" parameterType="map">
		SELECT r.reviewCode, r.userName, r.reviewSubject, r.reviewContent, r.starsCore, r.reviewCreated, r.pdNum, p.pdName, r.userId 
		FROM shReviews r 
		JOIN productList p 
		ON r.pdNum=p.pdNum 
		WHERE reviewCode = #{reviewCode}
	</select>
	
    <delete id="deleteReview" parameterType="Integer">
        DELETE FROM shReviews WHERE reviewCode = #{reviewCode}
    </delete>
    
     <insert id="insertReply" parameterType="com.hotbody.hotShop.review.Reply">
    	INSERT INTO recomment(cNum, reviewCode, userId, content, created)
      			 VALUES(recomment_seq.NEXTVAL, #{reviewCode}, #{userId}, #{content}, sysdate)
     </insert>
     
     <select id="replyDataCount" parameterType="map" resultType="Integer">
      		SELECT NVL(COUNT(*), 0) replyCount
      		FROM recomment 
      		WHERE reviewCode=#{reviewCode}
     </select>
      
      <select id="listReply" parameterType="map" resultType="com.hotbody.hotShop.review.Reply">
        SELECT * FROM (
             SELECT ROWNUM rnum, tb.* 
             FROM (SELECT cNum, reviewCode, m1.userId userId, content,
                    TO_CHAR(created, 'YYYY-MM-DD') created, userName
                     FROM recomment r 
                     JOIN member1 m1 ON r.userId=m1.userId 
                     WHERE reviewCode=#{reviewCode} ORDER BY cNum DESC 
               <![CDATA[
                     ) tb WHERE ROWNUM <=#{end}
                ) WHERE rnum >= #{start}
               ]]>
      </select>
      
      <delete id="deleteReply" parameterType="map">
      		DELETE FROM recomment WHERE cNum=#{cNum}
      		<if test="userId != 'admin'">
      			AND userId=#{userId}
      		</if>
      </delete>
      
</mapper>